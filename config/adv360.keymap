#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC           &kp F1        &kp F2        &kp F3         &kp F4        &kp F5  &kp F6                                                             &kp F7             &kp F8  &kp F9         &kp F10        &kp F11       &kp F12   &kp MINUS
&kp TAB           &kp Q         &kp W         &kp E          &kp R         &kp T   &kp C_PLAY_PAUSE                                                   &kp C_RANDOM_PLAY  &kp Y   &kp U          &kp I          &kp O         &kp P     &kp MINUS
&kp LEFT_CONTROL  &kp A         &kp S         &kp D          &kp F         &kp G   &kp C_REWIND      &kp LCTRL  &kp INSERT      &kp PAGE_UP    &mo 4  &kp C_AC_FORWARD   &kp H   &kp J          &kp K          &kp L         &kp SEMI  &kp RIGHT_CONTROL
&kp LSHFT         &kp Z         &kp X         &kp C          &kp V         &kp B                                &kp DEL         &kp PAGE_DOWN                            &kp N   &kp M          &kp COMMA      &kp DOT       &kp FSLH  &kp RSHFT
&mo 2             &kp CAPSLOCK  &kp LEFT_ALT  &kp RIGHT_ALT  &kp LEFT_GUI          &kp BSPC          &mo 1      &kp ESCAPE      &kp ENTER      &mo 4  &lt 3 SPACE                &kp RIGHT_GUI  &kp RIGHT_ALT  &kp LEFT_ALT  &kp RBKT  &mo 2
            >;
        };

        keypad {
            bindings = <
&trans  &none  &none         &none         &none             &none  &trans                                      &none   &none      &kp KP_NUM    &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans  &none  &none         &none         &none             &none  &none                                       &none   &kp PLUS   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &kp KP_MINUS     &trans
&trans  &none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LS(LEFT_GUI)  &none  &none   &trans  &trans      &trans  &trans  &none   &kp ASTRK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp NUMBER_0     &trans
&trans  &none  &none         &none         &none             &none                  &trans      &trans                  &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp SLASH        &trans
&trans  &none  &none         &none         &none                    &trans  &trans  &trans      &trans  &trans  &trans             &none         &none         &kp KP_DOT     &none            &trans
            >;
        };

        mod {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                            &bt BT_CLR              &none  &none       &none       &none  &none  &trans
&trans  &none         &none         &none         &none         &none         &bootloader                                      &bootloader             &none  &none       &none       &none  &none  &trans
&trans  &none         &none         &none         &none         &none         &bt BT_CLR   &trans  &trans      &trans  &trans  &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &trans
&trans  &none         &none         &none         &none         &none                              &trans      &trans                                  &none  &none       &none       &none  &none  &trans
&trans  &none         &none         &none         &none                       &trans       &trans  &trans      &trans  &trans  &trans                         &bl BL_INC  &bl BL_DEC  &none  &none  &trans
            >;
        };

        Space {
            bindings = <
&trans  &none  &none  &none  &none  &none  &none                                  &none   &none           &none           &none         &none            &none  &trans
&trans  &none  &none  &none  &none  &none  &none                                  &none   &none           &none           &none         &none            &none  &trans
&trans  &none  &none  &none  &none  &none  &none  &none  &none      &none  &none  &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none  &trans
&trans  &none  &none  &none  &none  &none                &none      &none                 &none           &none           &none         &none            &none  &trans
&trans  &none  &none  &none  &none         &none  &none  &none      &none  &none  &trans                  &none           &none         &none            &none  &trans
            >;
        };

        Symbol {
            bindings = <
&trans  &none      &none      &none          &none                 &none                  &none                                       &none   &none            &none       &none        &none             &none              &trans
&trans  &none      &kp PLUS   &kp ASTERISK   &kp LEFT_BRACE        &kp RIGHT_BRACE        &none                                       &none   &kp CARET        &kp HASH    &kp EQUAL    &kp PIPE          &kp BACKSLASH      &trans
&trans  &kp GRAVE  &kp TILDE  &kp PERCENT    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none   &trans  &trans      &trans  &trans  &none   &kp EXCLAMATION  &kp DOLLAR  &kp AT_SIGN  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &trans
&trans  &none      &none      &kp AMPERSAND  &kp LEFT_BRACKET      &kp RIGHT_BRACKET                      &trans      &trans                  &none            &none       &kp UNDER    &kp MINUS         &none              &trans
&trans  &none      &none      &none          &none                                        &trans  &trans  &trans      &trans  &trans  &trans                   &none       &none        &none             &none              &trans
            >;
        };
    };
};
